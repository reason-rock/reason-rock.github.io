<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://reason-rock.github.io/</id><title>reason_rock</title><subtitle>Computer Science, Python, 3D printing, Home assistant, Autonomous driving, AI</subtitle> <updated>2024-02-22T16:29:24+09:00</updated> <author> <name>reason_rock</name> <uri>https://reason-rock.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://reason-rock.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="en" href="https://reason-rock.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator> <rights> © 2024 reason_rock </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>LOAM std bad_alloc, multiScanRegistration 에러 해결</title><link href="https://reason-rock.github.io/posts/LOAM-std-bad_alloc,-multiScanRegistration-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0/" rel="alternate" type="text/html" title="LOAM std bad_alloc, multiScanRegistration 에러 해결" /><published>2022-12-17T10:53:11+09:00</published> <updated>2022-12-25T23:02:50+09:00</updated> <id>https://reason-rock.github.io/posts/LOAM-std-bad_alloc,-multiScanRegistration-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0/</id> <content src="https://reason-rock.github.io/posts/LOAM-std-bad_alloc,-multiScanRegistration-%EC%97%90%EB%9F%AC-%ED%95%B4%EA%B2%B0/" /> <author> <name>reason_rock</name> </author> <category term="Ros" /> <category term="Ros_Ko" /> <summary> PCL을 가지고 수도 없이 삽질을 하던 끝에 어찌어찌 해결을 보고,대안으로 진행중이던 새로운 센서 연동이고 뭐고 일단 다 미뤄두고 본격적으로 라이다로 할 수 있는 것들에 집중하여 경험해보고자 완성된 패키지를 구동해보는 것으로 방향성을 틀어보려 했다. 그래서 예전부터 해보고 싶었던 라이다 SLAM을 위해 여기저기 검색해보니 loam이 그나마 다가가기 쉬워 보였고, 설치 하고 실행해보았다. 다 짜놓은 코드 그냥 설치해서 빌드만 하면 되니 에러는 없겠지….. 라는 기대를 품고 돌려봤으나 어림도 없지 ㅋㅋ terminate called after throwing an instance of 'std::bad_alloc' what(): std::bad_alloc [multiScanRegistratio... </summary> </entry> <entry><title>AttributeError module 'serial' has no attribute 'Serial' 해결</title><link href="https://reason-rock.github.io/posts/AttributeError-module-'serial'-has-no-attribute-'Serial'-%ED%95%B4%EA%B2%B0/" rel="alternate" type="text/html" title="AttributeError module 'serial' has no attribute 'Serial' 해결" /><published>2022-12-17T10:53:11+09:00</published> <updated>2022-12-25T22:57:02+09:00</updated> <id>https://reason-rock.github.io/posts/AttributeError-module-'serial'-has-no-attribute-'Serial'-%ED%95%B4%EA%B2%B0/</id> <content src="https://reason-rock.github.io/posts/AttributeError-module-'serial'-has-no-attribute-'Serial'-%ED%95%B4%EA%B2%B0/" /> <author> <name>reason_rock</name> </author> <category term="Linux" /> <category term="(Ko)" /> <summary> MRD-1000v2 설정 중에 혹시나 시리얼 모듈이 문제인가 싶어서 재설치 하고 뭐하고 이것저것 하다가 포기하고 잤던 다음날, 다른 GPS 에서는 잘 돌아갔던 nmea 패키지조차 켜지지 않았다. "Traceback (most recent call last): File "/opt/ros/noetic/lib/nmea_navsat_driver/nmea_topic_serial_reader", line 38, in &amp;lt;module&amp;gt; libnmea_navsat_driver.nodes.nmea_topic_serial_reader.main() File "/opt/ros/noetic/lib/python3/dist-packages/libnmea_navsat_driver/nodes/nmea_top... </summary> </entry> <entry><title>MRD-1000v2 둘러보기</title><link href="https://reason-rock.github.io/posts/MRD-1000v2-%EB%91%98%EB%9F%AC%EB%B3%B4%EA%B8%B0/" rel="alternate" type="text/html" title="MRD-1000v2 둘러보기" /><published>2022-12-17T09:53:11+09:00</published> <updated>2022-12-31T22:53:34+09:00</updated> <id>https://reason-rock.github.io/posts/MRD-1000v2-%EB%91%98%EB%9F%AC%EB%B3%B4%EA%B8%B0/</id> <content src="https://reason-rock.github.io/posts/MRD-1000v2-%EB%91%98%EB%9F%AC%EB%B3%B4%EA%B8%B0/" /> <author> <name>reason_rock</name> </author> <category term="Device Overview" /> <category term="GPS(Ko)" /> <summary> GPS를 샀댄다. 어느날 가보니 그랬다. 뭘 샀냐고 물으니 시너렉스꺼 샀댄다. 개인적으로 시너렉스사의 GPS에 감성적인 부분에서 만족도가 높지 않아서 별로 선호하지 않았지만…. 어쩌겠는가. 나는 측위담당도 아니고, 구매권한도 없으니 그런갑다 해야지. 다만 만족도 하락에 기여한 원인중 하나가 장착부 설계시 마땅한 마운팅 브라켓이나 포인트가 없다는 점이었는데, 가볍게 묵살되어 슬펐다. 그렇게 온 GPS는 일주일 정도 지켜봤는데 졸업시즌이고 다들 바쁘신지 아무도 손을 안대길래 안바쁘고 시간 많은(?) 휴학생이 열어보기로 했다. MRD-1000v2. 기존 GPS는 언박싱까지는 해보지 않았기에 어떤지 잘 모르겠으나 박스는 평범하다. 다만 열어보니 좋았던 점과 나빴던 점이 있었는데, 먼저 기존에 사용... </summary> </entry> <entry><title>C++ internal compiler error 해결</title><link href="https://reason-rock.github.io/posts/c++-internal-compiler-error-%ED%95%B4%EA%B2%B0/" rel="alternate" type="text/html" title="C++ internal compiler error 해결" /><published>2022-12-10T13:53:11+09:00</published> <updated>2022-12-10T13:53:11+09:00</updated> <id>https://reason-rock.github.io/posts/c++-internal-compiler-error-%ED%95%B4%EA%B2%B0/</id> <content src="https://reason-rock.github.io/posts/c++-internal-compiler-error-%ED%95%B4%EA%B2%B0/" /> <author> <name>reason_rock</name> </author> <category term="Linux" /> <category term="(Ko)" /> <summary> 열심히 PCL을 빌드하며, 온갖 에러들을 헤치고 이젠 무조건 된다! 라는 생각을 하는 순간 c++: internal compiler error를 맞닥들였다. 다행히(?) 이 에러는 코드나 패키지의 에러가 아니었는데, 메모리 쪽 문제라 스왑 메모리를 재설정 하면 된다고 한다. 먼저 swap 메모리에 있는걸 싸그리 날린 후, sudo swapoff -a 메모리를 리사이즈 해준다. sudo dd if=/dev/zero of=/swapfile bs=1G count=8 그후 Swap 파일을 만들고, 활성화 해준다 sudo mkswap /swapfile #만들고 sudo swapon /swapfile #활성화 아래 명령어를 통해 Swap에 대한 정보를 확인할 수 있다. grep SwapTotal /... </summary> </entry> <entry><title>PCL 삽질기</title><link href="https://reason-rock.github.io/posts/PCL-%EC%82%BD%EC%A7%88%EA%B8%B0/" rel="alternate" type="text/html" title="PCL 삽질기" /><published>2022-12-10T10:53:11+09:00</published> <updated>2022-12-10T10:53:11+09:00</updated> <id>https://reason-rock.github.io/posts/PCL-%EC%82%BD%EC%A7%88%EA%B8%B0/</id> <content src="https://reason-rock.github.io/posts/PCL-%EC%82%BD%EC%A7%88%EA%B8%B0/" /> <author> <name>reason_rock</name> </author> <category term="Ros" /> <category term="Ros_Ko" /> <summary> PCL 삽질기 라이다 다뤄보기 위해 드라이버부터 설치하는데 거기서부터 모든 것이 시작되었다.(사실 나중에 알고보니 PCL 문제도 아니었다. 젠장) C++ 버전 11로 빌드해야 한다는 정체불명의 메모 하나를 믿고 단순히 C++버전만 14에서 11로 낮춰 주었다. 당연하게도 C++11은 PCL 1.10.0의 최소 요구사항 C++14를 충족하지 못하여 빌드가 불가능했다. 그때 눈치를 챘어야 했는데…. 한치의 의심도 없이 PCL 충돌 문제만 해결하면 라이다 이슈를 해결할 수 있으리라 믿고 장장 5일에 걸린 대 삽질을 시작했다. 무의미한 반복과 지금 와서보면 의미없는 짓을 제거하고 누군가에겐 도움이 될 만한 내용만 걸러서 서술해 보겠다.(쓰고 나니 별거 없더라…) PCL 버전을 낮추기 위한 방법 ... </summary> </entry> </feed>
